node {
   def mvnHome
   stage('Preparation') { // for display purposes
      // Get the Maven tool.
      // ** NOTE: This 'M3' Maven tool must be configured
      // **       in the global configuration.           
      mvnHome = tool 'M3'
   }
   
   stage('Build-output') {
      // Get some code from a GitHub repository
      git 'https://github.com/Oufti2015/output.git'
      // Run the maven build
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' -DskipTests=true clean install"
      } else {
         bat(/"${mvnHome}\bin\mvn" -DskipTests=true clean package/)
      }
      stash includes: 'target/*.jar', name: 'output_jar' 

	  lock(inversePrecedence: true, resource: 'build1') {
	      milestone()
	  }
   }
   stage('Build-html') {
      
      // Get some code from a GitHub repository
      git 'https://github.com/Oufti2015/html.git'

      unstash 'output_jar' 
      
      // Run the maven build
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' -DskipTests=true clean install"
      } else {
         bat(/"${mvnHome}\bin\mvn" -DskipTests=true clean package/)
      }
      stash includes: 'target/*.jar', name: 'html_jar'
	  milestone 2
   }
   stage('Build-parser') {
      // Get some code from a GitHub repository
      git 'https://github.com/Oufti2015/parser.git'

      unstash 'output_jar' 
      
      // Run the maven build
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' -DskipTests=true clean install"
      } else {
         bat(/"${mvnHome}\bin\mvn" -DskipTests=true clean package/)
      }
      stash includes: 'target/*.jar', name: 'parser_jar'
	  milestone 3
  }
   stage('Build-textfile') {
      // Get some code from a GitHub repository
      git 'https://github.com/Oufti2015/textfile.git'

      unstash 'output_jar' 
      
      // Run the maven build
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' -DskipTests=true clean install"
      } else {
         bat(/"${mvnHome}\bin\mvn" -DskipTests=true clean package/)
      }
      stash includes: 'target/*.jar', name: 'parser_jar'
	  milestone 4
  }
   stage('Build-skv') {
      // Get some code from a GitHub repository
      git 'https://github.com/Oufti2015/SKV.git'

      unstash 'output_jar' 
      
      // Run the maven build
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' -DskipTests=true clean install"
      } else {
         bat(/"${mvnHome}\bin\mvn" -DskipTests=true clean package/)
      }
      stash includes: 'target/*.jar', name: 'parser_jar'	  
	  milestone 5
  }
   stage('Build-bank') {
      // Get some code from a GitHub repository
      git 'https://github.com/Oufti2015/bank.git'

      unstash 'output_jar' 
      unstash 'html_jar' 
      unstash 'parser_jar'
      
      // Run the maven build
      if (isUnix()) {
         sh "'${mvnHome}/bin/mvn' -DskipTests=true clean install"
      } else {
         bat(/"${mvnHome}\bin\mvn" -DskipTests=true clean package/)
      }
      archive 'target/*.jar'
	  milestone 6
   }
   stage('Build-bankFX') {
      // Get some code from a GitHub repository
      git 'https://github.com/Oufti2015/bankFX.git'
      
      // Run the maven build
      if (isUnix()) {
         echo 'UNIX'
         sh "javac -version"
       //  sh "'${mvnHome}/bin/mvn' -DskipTests=true clean install"
      } else {
         echo 'BAT'
         bat(/avac -version/)
         bat(/"${mvnHome}\bin\mvn" -DskipTests=true clean package/)
      }
      archive 'target/*.jar'
emailext body: 'Hello World', subject: 'test', to: 'stephane.stiennon@gmail.com'
	  milestone 7
   }

   stage('Results') {
      archive 'target/*.jar'
   }
}
